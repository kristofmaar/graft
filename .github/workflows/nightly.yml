---
name: nightly

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '00 18 * * *'
  workflow_dispatch:

env:
  USE_BAZEL_VERSION: "latest"

jobs:

  build:
    runs-on: ubuntu-latest
    outputs:
      nightly-hash: ${{ steps.lsh-remote.outputs.nightly-hash }}
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1

      - name: Get commit hash
        id: lsh-remote
        run: |
          H=$(git ls-remote -h https://github.com/tensorflow/tensorflow nightly)
          echo ::set-output name=nightly-hash::$(echo ${H} | awk '{ print $1 }')

      - name: Log Bazel version
        run: bazelisk version

      - name: Test
        run: bazelisk test --config=ci -- //...

      - name: Build libtensorflow_go
        run: bazelisk build --config=ci -- //tools/lib_package:libtensorflow_go

      - name: Archive libtensorflow_go
        uses: actions/upload-artifact@v2
        with:
          name: libtensorflow_go
          path: bazel-bin/tools/lib_package/libtensorflow_go.tar.gz
          retention-days: 3

      - name: Build libtensorflow_graft
        run: bazelisk build --config=ci -- //tools/graft_package:libtensorflow_graft

      - name: Archive libtensorflow_graft
        uses: actions/upload-artifact@v2
        with:
          name: libtensorflow_graft
          path: bazel-bin/tools/graft_package/libtensorflow_graft.tar.gz
          retention-days: 3

  test:
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1

      - name: Download libtensorflow_graft
        uses: actions/download-artifact@v2
        with:
          name: libtensorflow_graft

      - name: Update bindings
        run: |
          rm -rf tensorflow
          tar xz --strip-components=5 \
            -f libtensorflow_graft.tar.gz \
            ./src/github.com/wamuir/graft/tensorflow
          rm libtensorflow_graft.tar.gz

      - name: Run gazelle
        run: |
          bazelisk run //:gazelle
          bazelisk run //:gazelle-update-repos

      - name: Test bindings
        run: bazelisk test --config=ci -- //tensorflow/...

  commit:
    needs: [build, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Download libtensorflow_graft
        uses: actions/download-artifact@v2
        with:
          name: libtensorflow_graft

      - name: Update bindings
        run: |
          rm -rf tensorflow
          tar xz --strip-components=5 \
            -f libtensorflow_graft.tar.gz \
            ./src/github.com/wamuir/graft/tensorflow
          rm libtensorflow_graft.tar.gz

      - name: Run gazelle
        run: |
          bazelisk run //:gazelle
          bazelisk run //:gazelle-update-repos

      - name: Check working tree for changes
        id: git-status
        run: |
          M=$([ -n "$(git status --porcelain tensorflow)" ] && echo true || echo false)
          echo ::set-output name=repo-changes::${M}

      - name: Commit changes
        if: ${{ steps.git-status.outputs.repo-changes == 'true' }}
        run: |
          git config --global user.name 'William Muir'
          git config --global user.email 'wamuir@gmail.com'
          git add tensorflow/
          git commit -m "[automated] Integrate changes from nightly build" \
            -m "tensorflow/tensorflow@${{ needs.build.outputs.nightly-hash }}"
          git push
